{"version":3,"sources":["assets/images/penny.svg","assets/images/globe.mp4","assets/images/ogglobe.ogv","assets/images/webmglobe.webm","history.js","contexts/UserProvider.jsx","components/SignIn/SignIn.jsx","pages/Home/Home.jsx","clientRoutes/API.js","components/ExpenseForm/NumberFormatCustom.jsx","components/SalaryInput/SalarySub/SalarySub.jsx","components/SalaryInput/HourlySub/HourlySub.jsx","components/SalaryInput/SalaryInput.jsx","components/Content/ContentHeader/ContentHeader.jsx","components/Content/HomeOverview/OverviewMobileSub.jsx","components/Content/HomeOverview/HomeOverview.jsx","components/Content/HelperText/HelperText.jsx","components/ExpenseForm/ExpenseForm.jsx","components/Content/ChargeItem/ChargeItem.jsx","components/Content/Content.jsx","pages/Profile/Profile.jsx","App.js","index.js"],"names":["module","exports","createBrowserHistory","context","createContext","UserProvider","children","useState","user","setUser","useEffect","fetch","then","res","json","catch","err","console","log","Provider","value","SignIn","className","href","id","Home","t1","TimelineMax","to","opacity","ease","Power2","easeOut","src","require","alt","data","axios","post","get","category","put","NumberFormatCustom","props","inputRef","onChange","other","getInputRef","onValueChange","values","target","thousandSeparator","decimalScale","isNumericString","prefix","SalarySub","handleChange","onSubmit","clearAlerts","salary","onFocus","Grid","container","item","xl","FormControl","fullWidth","TextField","label","InputProps","inputComponent","xs","Button","variant","type","HourlySub","handleWeekly","handleHourly","hourly","weekly","name","toLocaleString","style","currency","SalaryInput","selected","setSelected","setSalarySection","setSalary","incomeRate","setincomeRate","setHourly","setWeekly","inputAlert","setInputAlert","event","preventDefault","API","_id","rateSubmit","rate","e","handleSalary","FormControlLabel","control","Checkbox","color","labelPlacement","onClick","Header","message","total","OverviewMobileSub","profile","nrTotal","rTotal","format$","input","formatP","perc","toFixed","Paper","moment","Date","now","format","Overview","setProfile","doughnut","setDoughnut","nonMonDoughnut","setNonMonDoughnut","recurringTotal","setRecurringTotal","nonRecurringTotal","setNonRecurringTotal","expense","financesTotal","livingTotal","healthTotal","leisureTotal","travelTotal","nonMonFin","nonMonLiv","nonMonHea","nonMonLei","nonMonTra","nonRecTotal","filter","recurring","date","amount","map","monthly","nonMonTotal","labels","datasets","backgroundColor","response","sm","md","lg","options","title","display","text","fontSize","legend","position","maintainAspectRation","setText","ExpenseForm","propData","form","toggleForm","setRetrieve","setCategory","radioValue","setRadioValue","setMonthly","selectedDate","setSelectedDate","setAmount","setTitle","toLowerCase","InputLabel","Select","document","querySelector","border","MenuItem","FormHelperText","component","FormLabel","RadioGroup","aria-label","Radio","utils","DateFnsUtils","disableToolbar","autoOk","margin","KeyboardButtonProps","multiline","rowsMax","dataObject","ChargeItem","querySelectorAll","disabled","Content","content","setContent","monthlyCharges","setMonthlyCharges","oneTime","setOneTime","retrieve","expenseToggle","setExpenseToggle","totalMonthly","setTotalMonthly","retrieveContent","sortRecent","array","sort","a","b","unix","expenseInputToggle","expenseDiv","length","sortedOneTime","sortedMonthly","datedOneTime","datedMonthly","marginRight","update","index","key","video","ogvideo","webmglobe","Profile","salarySection","chosenCat","setChosenCat","userData","useContext","expenseCategories","icon","Container","maxWidth","autoPlay","loop","muted","username","displpay","contentDisplay","App","history","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ddf08557.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/penny.128c48c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/globe.0e99500f.mp4\";","module.exports = __webpack_public_path__ + \"static/media/ogglobe.145a8ac2.ogv\";","module.exports = __webpack_public_path__ + \"static/media/webmglobe.cf9b0c18.webm\";","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { createContext, useState, useEffect } from 'react';\r\nconst context = createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState();\r\n\r\n    useEffect(() => {\r\n        fetch(\"/user\")\r\n            .then(res => res.json())\r\n            .then(res => setUser(res))\r\n            .catch(err => console.log(err));\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <context.Provider value={user}>\r\n            {children}\r\n        </context.Provider>\r\n    );\r\n};\r\n\r\nUserProvider.context = context;\r\n\r\nexport default UserProvider;","import React from 'react';\r\nimport { FaGooglePlusG } from 'react-icons/fa';\r\nimport './SignIn.css';\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <div className='loginCont'>\r\n      <a href='/auth/google' className='loginBtn' id='googleBtn'>\r\n        <FaGooglePlusG />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useEffect } from 'react';\r\nimport './Home.css';\r\nimport SignIn from '../../components/SignIn/SignIn';\r\nimport { Power2 } from 'gsap/TweenMax';\r\nimport TimelineMax from 'gsap/TimelineMax';\r\n\r\nconst Home = () => {\r\n\r\n    const t1 = new TimelineMax()\r\n\r\n    useEffect(() => {\r\n        t1.to('#pennyImg', 3, { opacity: 1, ease: Power2.easeOut }, .3);\r\n        t1.to('#hHeader', 5, { opacity: 1, ease: Power2.easeOut }, .5);\r\n        t1.to('#hPar1', 3, { opacity: 1, ease: Power2.easeOut }, 1.5);\r\n        t1.to('#hPar2', 3, { opacity: 1, ease: Power2.easeOut }, 2.5);\r\n        t1.to('.hButton', 5, { opacity: 1, ease: Power2.easeOut }, 3.5);\r\n        t1.to('.loginBtn', 3, { opacity: 1, ease: Power2.easeOut }, 4);\r\n        t1.to('#signInTxt', 3, { opacity: 1, ease: Power2.easeOut }, 4);\r\n    }, [t1])\r\n\r\n    return (\r\n        <>\r\n            <div className='homepage'>\r\n                <div className='hContent'>\r\n                    <img src={require('../../assets/images/penny.svg')} alt='penny' id='pennyImg' />\r\n                    <div className='hTitle'>\r\n                        <p id='hPar1'>My name's <span id='hHeader'>Penny</span>.</p>\r\n                        <p id='hPar2'>I'm here to help you manage your finances.</p>\r\n                    </div>\r\n                </div>\r\n                <p id='signInTxt'>Sign In</p>\r\n                <SignIn id='hSign' />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import axios from \"axios\";\r\n\r\nexport default {\r\n    adjustSalary: data => {\r\n        return axios.post('/api/salary/update', data);\r\n    },\r\n\r\n    getCategoryData: data => {\r\n        let id = data.id;\r\n        return axios.get(`/api/expense/${id}/${data.category}`);\r\n    },\r\n\r\n    getHomeDisplay: data => {\r\n        let id = data.id;\r\n        return axios.get(`/api/home/${id}`);\r\n    },\r\n\r\n    createExpense: data => {\r\n        return axios.post('/api/expense/create', data);\r\n    },\r\n\r\n    updateExpense: data => {\r\n        return axios.post('/api/expense/update', data);\r\n    },\r\n\r\n    deleteExpense: data => {\r\n        return axios.put(`/api/expense/delete/${data.id}`);\r\n    }\r\n};","import React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator\r\n            decimalScale={2}\r\n            isNumericString\r\n            prefix=\"$\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default NumberFormatCustom;","import React from 'react';\r\nimport './SalarySub.css';\r\nimport { Grid, TextField, Button, FormControl } from '@material-ui/core';\r\nimport NumberFormatCustom from '../../ExpenseForm/NumberFormatCustom';\r\nimport './SalarySub.css';\r\n\r\nconst SalarySub = ({ handleChange, onSubmit, clearAlerts, salary }) => {\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} onFocus={clearAlerts}>\r\n            <Grid container id='salaryContainer'>\r\n                <Grid item xl id='salaryGrid'>\r\n                    <FormControl fullWidth >\r\n                        <TextField\r\n                            label=\"Salary\"\r\n                            value={salary !== 0 ? salary : ''}\r\n                            onChange={handleChange}\r\n                            className='hourlyWageInput salaryField'\r\n                            id=\"formatted-numberformat-input\"\r\n                            InputProps={{\r\n                                inputComponent: NumberFormatCustom\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} id='hourlySubmit'>\r\n                    <Button variant=\"outlined\" type='submit'>Submit</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SalarySub;","import React from 'react';\r\nimport './HourlySub.css';\r\nimport { Grid, Button, TextField, FormControl } from '@material-ui/core'\r\nimport NumberFormatCustom from '../../ExpenseForm/NumberFormatCustom';\r\n\r\nconst HourlySub = ({ handleWeekly, handleHourly, onSubmit, clearAlerts, hourly, weekly, salary }) => {\r\n    return (\r\n        <form onSubmit={onSubmit} onFocus={clearAlerts} id='hourlySalForm'>\r\n            <Grid container id='hourlyContainer'>\r\n                <Grid item id='hourlyWageGrid'>\r\n                    <FormControl fullWidth >\r\n                        <TextField\r\n                            label=\"Hourly Average\"\r\n                            className='hourlyWageInput'\r\n                            name='hourly'\r\n                            value={hourly}\r\n                            onChange={handleHourly}\r\n                            id=\"formatted-numberformat-input\"\r\n                            InputProps={{\r\n                                inputComponent: NumberFormatCustom\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs id='weeklyGrid'>\r\n                    <TextField\r\n                        id=\"outlined-adornment-amount\"\r\n                        className='weeklyAverageInput'\r\n                        name='weekly'\r\n                        variant=\"outlined\"\r\n                        value={weekly}\r\n                        label=\"Average Weekly Hours:\"\r\n                        onChange={handleWeekly}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    {salary && hourly && weekly ? <p id='salaryTotalP'>{salary.toLocaleString(\"en-US\", {\r\n                        style: \"currency\",\r\n                        currency: \"USD\"\r\n                    })}</p> : null}\r\n                </Grid>\r\n                <Grid item xs={12} id='hourlySubmit'>\r\n                    <Button variant=\"outlined\" type='submit'>Submit</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default HourlySub;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Checkbox, Button, FormControlLabel } from '@material-ui/core';\r\nimport API from '../../clientRoutes/API';\r\nimport SalarySub from './SalarySub/SalarySub';\r\nimport HourlySub from './HourlySub/HourlySub';\r\nimport './SalaryInput.css';\r\n\r\nconst SalaryInput = ({ selected, setSelected, setSalarySection }) => {\r\n\r\n    const [salary, setSalary] = useState('');\r\n    const [incomeRate, setincomeRate] = useState(null);\r\n    const [hourly, setHourly] = useState('');\r\n    const [weekly, setWeekly] = useState('');\r\n    const [inputAlert, setInputAlert] = useState('')\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault();\r\n        if (incomeRate === 'hourly' && !hourly || incomeRate === 'hourly' && !weekly) {\r\n            return setInputAlert('Both your hourly rate and weekly hours must be entered.');\r\n        }\r\n        else {\r\n            API.adjustSalary({\r\n                id: selected._id,\r\n                salary: salary\r\n            }).then(res => { setSelected(res.data); console.log(res.data); setSalarySection(false) })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    const clearAlerts = () => {\r\n        setInputAlert(null);\r\n    }\r\n\r\n    const cancelUpdate = () => {\r\n        setincomeRate(null)\r\n        setSalarySection(false);\r\n    }\r\n\r\n    const rateSubmit = rate => {\r\n        setincomeRate(rate)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSalary(hourly * weekly * 4 * 12);\r\n    }, [hourly, weekly])\r\n\r\n    const handleHourly = (e) => {\r\n        setHourly(e.target.value);\r\n    }\r\n\r\n    const handleWeekly = (e) => {\r\n        setWeekly(e.target.value);\r\n    }\r\n\r\n    const handleSalary = (e) => {\r\n        setSalary(e.target.value);\r\n    }\r\n\r\n    const displayForm = () => {\r\n        if (incomeRate === 'salaried') {\r\n            return (\r\n                <SalarySub handleChange={handleSalary} onSubmit={onSubmit} clearAlerts={clearAlerts} salary={salary} />\r\n            )\r\n        }\r\n        if (incomeRate === 'hourly') {\r\n            return (\r\n                <HourlySub handleHourly={handleHourly} handleWeekly={handleWeekly} onSubmit={onSubmit} clearAlerts={clearAlerts} hourly={hourly} weekly={weekly} salary={salary} />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {inputAlert ? <p>{inputAlert}</p> : null}\r\n            {!incomeRate ? <>\r\n                <FormControlLabel\r\n                    value={'hourly'}\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Hourly\"\r\n                    labelPlacement=\"start\"\r\n                    onClick={() => rateSubmit('hourly')}\r\n                />\r\n                <FormControlLabel\r\n                    value={'salaried'}\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Salaried\"\r\n                    labelPlacement=\"start\"\r\n                    onClick={() => rateSubmit('salaried')}\r\n                />\r\n            </> : displayForm()}\r\n            <Button id='salaryBackBtn' onClick={() => cancelUpdate()}>Cancel</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SalaryInput;\r\n\r\n","import React from 'react';\r\nimport './ContentHeader.css';\r\n\r\nconst Header = ({ message, total }) => {\r\n  return (\r\n    <h3 className='contentHeader'>\r\n      {message}{' '}\r\n      {total ? (\r\n        <>\r\n          {total.toLocaleString('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD'\r\n          })}\r\n        </>\r\n      ) : null}\r\n    </h3>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nconst OverviewMobileSub = ({ profile, nrTotal, rTotal }) => {\r\n  let format$ = input => {\r\n    return input.toLocaleString('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    });\r\n  };\r\n\r\n  let formatP = input => {\r\n    let perc = (input / (profile.salary / 12)).toFixed(2) * 100;\r\n    return (\r\n      <p className='ovPercP'>\r\n        <span className='percSpan'>{perc}%</span> of your income.\r\n      </p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid container className='ovSubC'>\r\n      <Grid item xs={12} className='ovSubI'>\r\n        <Paper className='ovP'>\r\n          <header>\r\n            <span className='ovI'>Estimated monthly income: </span>\r\n            {format$(profile.salary / 12)}\r\n          </header>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} className='ovSubI'>\r\n        <Paper className='ovP'>\r\n          <header>\r\n            <span className='ovI'>Total monthly charges: </span>\r\n            {format$(rTotal)}\r\n          </header>\r\n          {formatP(rTotal)}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} className='ovSubI'>\r\n        <Paper className='ovP'>\r\n          <header>\r\n            <span className='ovI'>\r\n              Total msc. Charges from {moment(Date.now()).format('MMMM')}:{' '}\r\n            </span>\r\n            {format$(nrTotal)}\r\n          </header>\r\n          {formatP(nrTotal)}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} className='ovSubI'>\r\n        <Paper className='ovP'>\r\n          <header>\r\n            <span className='ovI'>Total charges this month: </span>\r\n            {format$(rTotal + nrTotal)}\r\n          </header>\r\n          {formatP(rTotal + nrTotal)}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} className='ovSubI'>\r\n        <Paper className='ovP'>\r\n          <header>\r\n            <span>Budget remaining: </span>\r\n            {format$(profile.salary - (rTotal + nrTotal))}\r\n          </header>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OverviewMobileSub;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './HomeOverview.css';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport API from '../../../clientRoutes/API';\r\nimport { Paper, Grid } from '@material-ui/core';\r\nimport OverviewMobileSub from './OverviewMobileSub';\r\nimport moment from 'moment';\r\n\r\nconst Overview = ({ user }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [doughnut, setDoughnut] = useState(null);\r\n  const [nonMonDoughnut, setNonMonDoughnut] = useState(null);\r\n  const [recurringTotal, setRecurringTotal] = useState(null);\r\n  const [nonRecurringTotal, setNonRecurringTotal] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (profile !== null) {\r\n      console.log('profile', profile);\r\n      console.log('profile.expense array', profile.expense);\r\n      let financesTotal = 0;\r\n      let livingTotal = 0;\r\n      let healthTotal = 0;\r\n      let leisureTotal = 0;\r\n      let travelTotal = 0;\r\n\r\n      let nonMonFin = 0;\r\n      let nonMonLiv = 0;\r\n      let nonMonHea = 0;\r\n      let nonMonLei = 0;\r\n      let nonMonTra = 0;\r\n\r\n      let nonRecTotal = 0;\r\n\r\n      profile.expense.filter(item => {\r\n        if (item.recurring === false) {\r\n          if (\r\n            moment(item.date).format('MMMM') ===\r\n            moment(Date.now()).format('MMMM')\r\n          ) {\r\n            nonRecTotal += item.amount;\r\n            return item;\r\n          }\r\n        }\r\n        setNonRecurringTotal(nonRecTotal);\r\n      });\r\n\r\n      profile.expense.map(item => {\r\n        switch (item.category) {\r\n          case 'finances':\r\n            if (item.monthly === true) return (financesTotal += item.amount);\r\n            else return (nonMonFin += item.amount);\r\n          case 'living':\r\n            if (item.monthly === true) return (livingTotal += item.amount);\r\n            else return (nonMonLiv += item.amount);\r\n          case 'health':\r\n            if (item.monthly === true) return (healthTotal += item.amount);\r\n            else return (nonMonHea += item.amount);\r\n          case 'leisure':\r\n            if (item.monthly === true) return (leisureTotal += item.amount);\r\n            else return (nonMonLei += item.amount);\r\n          case 'travel':\r\n            if (item.monthly === true) return (travelTotal += item.amount);\r\n            else return (nonMonTra += item.amount);\r\n          default:\r\n            return item;\r\n        }\r\n      });\r\n\r\n      let total =\r\n        financesTotal + livingTotal + healthTotal + leisureTotal + travelTotal;\r\n      setRecurringTotal(total);\r\n      let nonMonTotal =\r\n        nonMonFin + nonMonLiv + nonMonHea + nonMonLei + nonMonTra;\r\n\r\n      setDoughnut({\r\n        labels: ['Finances', 'Living', 'Health', 'Leisure', 'Travel'],\r\n        datasets: [\r\n          {\r\n            label: `Recurring Monthly Expenses - ${total.toLocaleString(\r\n              'en-US',\r\n              {\r\n                style: 'currency',\r\n                currency: 'USD'\r\n              }\r\n            )}`,\r\n            backgroundColor: ['#5A4218', 'green', 'red', 'gold', 'aquamarine'],\r\n            data: [\r\n              financesTotal,\r\n              livingTotal,\r\n              healthTotal,\r\n              leisureTotal,\r\n              travelTotal\r\n            ]\r\n          }\r\n        ]\r\n      });\r\n\r\n      setNonMonDoughnut({\r\n        labels: ['Finances', 'Living', 'Health', 'Leisure', 'Travel'],\r\n        datasets: [\r\n          {\r\n            label: `Msc. Charges - ${nonMonTotal.toLocaleString('en-US', {\r\n              style: 'currency',\r\n              currency: 'USD'\r\n            })}`,\r\n            backgroundColor: ['#5A4218', 'green', 'red', 'gold', 'aquamarine'],\r\n            data: [nonMonFin, nonMonLiv, nonMonHea, nonMonLei, nonMonTra]\r\n          }\r\n        ]\r\n      });\r\n    }\r\n  }, [profile]);\r\n\r\n  useEffect(() => {\r\n    API.getHomeDisplay({ id: user }).then(response => {\r\n      console.log('response', response);\r\n      setProfile(response.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12} md={6} lg={6} className='pieGridItem'>\r\n        {doughnut !== null && recurringTotal > 0 ? (\r\n          <Paper id='recurringPiePaper'>\r\n            <Doughnut\r\n              id='recurringPie'\r\n              data={doughnut}\r\n              options={{\r\n                title: {\r\n                  display: true,\r\n                  text: doughnut.datasets[0].label,\r\n                  fontSize: 12\r\n                },\r\n                legend: {\r\n                  display: true,\r\n                  position: 'bottom',\r\n                  maintainAspectRation: false\r\n                }\r\n              }}\r\n            />\r\n          </Paper>\r\n        ) : (\r\n          <Paper className='ovAlt'>\r\n            <p>\r\n              This section evaluates your recurring charges, i.e. Credit card\r\n              charges, school loan payments, phone payments, etc. Click 'Add\r\n              Expense' above to add an item.\r\n            </p>\r\n          </Paper>\r\n        )}\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6} className='pieGridItem'>\r\n        {nonMonDoughnut !== null && nonRecurringTotal > 0 ? (\r\n          <Paper id='recurringPiePaper'>\r\n            <Doughnut\r\n              id='recurringPie'\r\n              data={nonMonDoughnut}\r\n              options={{\r\n                title: {\r\n                  display: true,\r\n                  text: nonMonDoughnut.datasets[0].label,\r\n                  fontSize: 12\r\n                },\r\n                legend: {\r\n                  display: true,\r\n                  position: 'bottom',\r\n                  maintainAspectRation: false\r\n                }\r\n              }}\r\n            />\r\n          </Paper>\r\n        ) : (\r\n          <Paper className='ovAlt'>\r\n            <p>\r\n              This section evaluates your one-time charges, i.e. meals, gas,\r\n              movie tickets, etc. Click 'Add Expense' above to add an item.\r\n            </p>\r\n          </Paper>\r\n        )}\r\n      </Grid>\r\n      <Grid container id='mobileOverview'>\r\n        {recurringTotal !== null &&\r\n        nonRecurringTotal !== null &&\r\n        profile.salary > 0 ? (\r\n          <OverviewMobileSub\r\n            rTotal={recurringTotal}\r\n            nrTotal={nonRecurringTotal}\r\n            profile={profile}\r\n          />\r\n        ) : (\r\n          <Paper className='ovAlt'>\r\n            This section provides an overview of your charges and how they\r\n            affect your monthly income. Please ensure your salary is updated\r\n            above.\r\n          </Paper>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './HelperText.css';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst Header = ({ monthly, display }) => {\r\n  const [text, setText] = useState('...');\r\n  useEffect(() => {\r\n    if (monthly === true) {\r\n      switch (display) {\r\n        case 'finances':\r\n          setText('Ex. Loans, credit card payments, etc.');\r\n          break;\r\n        case 'living':\r\n          setText('Ex. Electric bill, phone bill, etc.');\r\n          break;\r\n        case 'health':\r\n          setText('Ex. Gym membership, Health Insurance, Medical bills, etc.');\r\n          break;\r\n        case 'leisure':\r\n          setText(\r\n            'Ex. Entertainment subscriptions, Cable bill, Internet bill, etc.'\r\n          );\r\n          break;\r\n        case 'travel':\r\n          setText('Ex. Car Payments, Auto Insurance, etc.');\r\n          break;\r\n        default:\r\n          setText('...');\r\n          break;\r\n      }\r\n    } else {\r\n      switch (display) {\r\n        case 'finances':\r\n          setText('Ex. Taxes, Donations, etc.');\r\n          break;\r\n        case 'living':\r\n          setText('Ex. Home Improvements, Appliances, etc.');\r\n          break;\r\n        case 'health':\r\n          setText('Ex. Food, Spa days, Prescriptions, etc.');\r\n          break;\r\n        case 'leisure':\r\n          setText('Ex. Video games, movie tickets, concerts, etc.');\r\n          break;\r\n        case 'travel':\r\n          setText(\r\n            'Ex. renewal, vehicle purchases, plane tickets, vacations, etc.'\r\n          );\r\n          break;\r\n        default:\r\n          setText('No expenses found for this category.');\r\n          break;\r\n      }\r\n    }\r\n  }, [display, monthly]);\r\n\r\n  return (\r\n    <div className='helperPaper'>\r\n      <h2>No expenses found for this category. Try adding one...</h2>\r\n      <h4>{text}</h4>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem, FormHelperText, FormControlLabel, Grid, FormLabel, RadioGroup, Radio, TextField, Button } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport NumberFormatCustom from './NumberFormatCustom';\r\nimport './ExpenseForm.css';\r\nimport API from '../../clientRoutes/API';\r\n\r\nconst ExpenseForm = ({ user, propData, form, toggleForm, setRetrieve }) => {\r\n    const [category, setCategory] = useState('');\r\n    const [radioValue, setRadioValue] = useState('');\r\n    const [monthly, setMonthly] = useState(false);\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [amount, setAmount] = useState('');\r\n    const [title, setTitle] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (propData) {\r\n            setCategory(propData.category.toLowerCase())\r\n            setMonthly(propData.monthly)\r\n            setSelectedDate(propData.date)\r\n            setAmount(propData.amount)\r\n            setTitle(propData.title)\r\n            if (propData.monthly === true) {\r\n                setRadioValue('Yes')\r\n            }\r\n            else setRadioValue('No')\r\n        }\r\n    }, [propData])\r\n\r\n    const categoryChange = e => {\r\n        document.querySelector('#categoryGrid').style.border = 'none';\r\n        setCategory(e.target.value);\r\n    }\r\n\r\n    const monthlyHandler = e => {\r\n        document.querySelector('#monthlyGrid').style.border = 'none';\r\n        setRadioValue(e.target.value);\r\n        switch (e.target.value) {\r\n            case 'Yes':\r\n                setMonthly(true);\r\n                break;\r\n            case 'No':\r\n                setMonthly(false);\r\n                break;\r\n            default:\r\n                setMonthly(false);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n    }\r\n\r\n    const handleAmount = e => {\r\n        document.querySelector('#amountGrid').style.border = 'none';\r\n        setAmount(e.target.value);\r\n    }\r\n\r\n    const handleTitle = e => {\r\n        document.querySelector('#titleGrid').style.border = 'none';\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const handleCancel = e => {\r\n        toggleForm(false);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (form === true) {\r\n            let dataObject = {\r\n                id: propData._id,\r\n                category: category,\r\n                monthly: monthly,\r\n                date: selectedDate,\r\n                amount: amount,\r\n                title: title\r\n            }\r\n\r\n            API.updateExpense(dataObject)\r\n                .then((response) => {\r\n                    toggleForm(false);\r\n                    setRetrieve(true);\r\n                })\r\n        }\r\n        else {\r\n            if (category !== '' && radioValue !== '' && amount !== '' && title !== '') {\r\n                let dataObject = {\r\n                    id: user,\r\n                    category: category,\r\n                    monthly: monthly,\r\n                    date: selectedDate,\r\n                    amount: amount,\r\n                    title: title\r\n                }\r\n                API.createExpense(dataObject)\r\n                    .then(res => {\r\n                        document.querySelector('#expenseInputPaper').style.display = 'none';\r\n                        setAmount('');\r\n                        setRadioValue('');\r\n                        setMonthly(false);\r\n                        setTitle('');\r\n                        setCategory('');\r\n                        setRetrieve(true);\r\n                    });\r\n            }\r\n            else {\r\n                if (category === '') {\r\n                    document.querySelector('#categoryGrid').style.border = '3px solid red';\r\n                }\r\n                if (radioValue === '') {\r\n                    document.querySelector('#monthlyGrid').style.border = '3px solid red';\r\n                }\r\n                if (amount === '') {\r\n                    document.querySelector('#amountGrid').style.border = '3px solid red';\r\n                }\r\n                if (title === '') {\r\n                    document.querySelector('#titleGrid').style.border = '3px solid red';\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container id='expenseGrid'>\r\n            <Grid item id='categoryGrid'>\r\n                <FormControl>\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">Category</InputLabel>\r\n                    <Select\r\n                        id=\"demo-simple-select-helper\"\r\n                        value={category}\r\n                        onChange={categoryChange}\r\n                    >\r\n                        <MenuItem value=\"finances\"><em>Finances</em></MenuItem>\r\n                        <MenuItem value=\"living\"><em>Living</em></MenuItem>\r\n                        <MenuItem value=\"health\"><em>Health</em></MenuItem>\r\n                        <MenuItem value=\"leisure\"><em>Leisure</em></MenuItem>\r\n                        <MenuItem value=\"travel\"><em>Travel</em></MenuItem>\r\n                    </Select>\r\n                    <FormHelperText>How you want to categorize this expense.</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item id='monthlyGrid'>\r\n                <FormControl component=\"fieldset\" >\r\n                    <FormLabel component=\"legend\">Is this a monthly charge?</FormLabel>\r\n                    <RadioGroup aria-label=\"monthly\" name=\"monthly\" value={radioValue} onChange={monthlyHandler}>\r\n                        <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\r\n                        <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item id='dateGrid'>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        autoOk={true}\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Date picker inline\"\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item id='amountGrid'>\r\n                <FormControl fullWidth >\r\n                    <TextField\r\n                        label=\"Amount\"\r\n                        value={amount}\r\n                        onChange={handleAmount}\r\n                        id=\"formatted-numberformat-input\"\r\n                        InputProps={{\r\n                            inputComponent: NumberFormatCustom\r\n                        }}\r\n                    />\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item id='titleGrid'>\r\n                <TextField\r\n                    id=\"outlined-multiline-flexible\"\r\n                    label=\"Expense Title\"\r\n                    multiline\r\n                    rowsMax=\"4\"\r\n                    value={title}\r\n                    onChange={handleTitle}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n            </Grid>\r\n            <Grid item id='submitGrid'>\r\n                <Button variant=\"contained\" color=\"primary\" type='submit' onClick={handleSubmit}>Submit</Button>\r\n            </Grid>\r\n            {toggleForm ? <Grid item id='cancelExpenseGrid'>\r\n                <Button variant='contained' color='primary' type='button' onClick={handleCancel}>Cancel</Button>\r\n            </Grid> : null}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\nimport './ChargeItem.css';\r\nimport moment from 'moment';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { FaEdit, FaCut } from 'react-icons/fa';\r\nimport ExpenseForm from '../../ExpenseForm/ExpenseForm';\r\nimport API from '../../../clientRoutes/API';\r\n\r\nconst ChargeItem = ({ data, setRetrieve }) => {\r\n  const [form, toggleForm] = useState(false);\r\n  const updateField = () => {\r\n    toggleForm(true);\r\n  };\r\n\r\n  const deleteExpense = () => {\r\n    document.querySelectorAll('.expenseDeleteBtn').disabled = true;\r\n    API.deleteExpense({ id: data._id }).then(response => {\r\n      document.querySelectorAll('.expenseDeleteBtn').disabled = false;\r\n      setRetrieve(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container className='chargeItem'>\r\n        {form === true && data ? (\r\n          <ExpenseForm\r\n            propData={data}\r\n            form={form}\r\n            toggleForm={toggleForm}\r\n            setRetrieve={setRetrieve}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Grid item xs={3} className='gridICharge'>\r\n              <p>{data.title}</p>\r\n            </Grid>\r\n            <Grid item xs={1} className='gridICharge'>\r\n              <p>${data.amount}</p>\r\n            </Grid>\r\n            <Grid item xs={3} className='gridICharge'>\r\n              <p>{moment(data.date).format('MM/DD/YYYY')}</p>\r\n            </Grid>\r\n            <Grid item xs={1} className='gridICharge'>\r\n              <Button type='button' onClick={updateField}>\r\n                <FaEdit />\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={1} className='gridICharge'>\r\n              <Button\r\n                type='button'\r\n                className='expenseDeleteBtn'\r\n                onClick={deleteExpense}\r\n              >\r\n                <FaCut />\r\n              </Button>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChargeItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport { FaFolderPlus } from 'react-icons/fa';\r\nimport CHeader from './ContentHeader/ContentHeader';\r\nimport Overview from './HomeOverview/HomeOverview';\r\nimport HelperText from './HelperText/HelperText';\r\nimport './Content.css';\r\nimport ExpenseForm from '../ExpenseForm/ExpenseForm';\r\nimport ChargeItem from './ChargeItem/ChargeItem';\r\nimport API from '../../clientRoutes/API';\r\nimport moment from 'moment';\r\n\r\nconst Content = ({ display, user }) => {\r\n  const [content, setContent] = useState(null);\r\n  const [monthlyCharges, setMonthlyCharges] = useState(null);\r\n  const [oneTime, setOneTime] = useState(null);\r\n  const [retrieve, setRetrieve] = useState(false);\r\n  const [expenseToggle, setExpenseToggle] = useState(false);\r\n  const [totalMonthly, setTotalMonthly] = useState(null);\r\n\r\n  const retrieveContent = () => {\r\n    if (display !== null && user !== null) {\r\n      API.getCategoryData({ id: user, category: display }).then(response => {\r\n        setContent(response.data);\r\n        setRetrieve(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const sortExpenses = () => {\r\n    if (content !== null && display !== 'home') {\r\n      let sortedOneTime = content.filter(item => item.monthly === false);\r\n      let sortedMonthly = content.filter(item => item.monthly === true);\r\n      let datedOneTime = sortRecent(sortedOneTime);\r\n      let datedMonthly = sortRecent(sortedMonthly);\r\n      setMonthlyCharges(datedMonthly);\r\n      setOneTime(datedOneTime);\r\n    }\r\n  };\r\n\r\n  const sortRecent = array => {\r\n    return array.sort((a, b) => moment(b.date).unix() - moment(a.date).unix());\r\n  };\r\n\r\n  const expenseInputToggle = () => {\r\n    setExpenseToggle(!expenseToggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let expenseDiv = document.querySelector('#expenseInputPaper');\r\n    if (expenseToggle === false) {\r\n      expenseDiv.style.display = 'none';\r\n    }\r\n    if (expenseToggle === true) {\r\n      expenseDiv.style.display = 'flex';\r\n    }\r\n  }, [expenseToggle]);\r\n\r\n  useEffect(() => {\r\n    if (monthlyCharges !== null && monthlyCharges.length > 0) {\r\n      let total = 0;\r\n      monthlyCharges.map(item => (total += item.amount));\r\n      setTotalMonthly(total);\r\n    }\r\n  }, [monthlyCharges]);\r\n\r\n  useEffect(retrieveContent, [display, user, retrieve]);\r\n  useEffect(sortExpenses, [content]);\r\n\r\n  return (\r\n    <>\r\n      {display === 'home' ? (\r\n        <>\r\n          <Grid container id='addCont'>\r\n            <Grid item xs={12} id='addItem'>\r\n              <Paper id='addPaper'>\r\n                <Grid item xs={12} id='addExpenseSection'>\r\n                  <Button id='toggleExpenseBtn' onClick={expenseInputToggle}>\r\n                    <p style={{ marginRight: 10 }}>Add Expense</p>{' '}\r\n                    <FaFolderPlus style={{ fontSize: 24 }} />{' '}\r\n                  </Button>\r\n                </Grid>\r\n              </Paper>\r\n              <Paper id='expenseInputPaper'>\r\n                <Grid item xs={12} id='expenseInputSection'>\r\n                  {user ? (\r\n                    <ExpenseForm\r\n                      user={user}\r\n                      update={() => retrieveContent()}\r\n                      setRetrieve={setRetrieve}\r\n                    />\r\n                  ) : null}\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container id='homeContentGrid'>\r\n            <Overview user={user} />\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Grid container id='addCont'>\r\n            <Grid item xs={12} id='addItem'>\r\n              <Paper id='addPaper'>\r\n                <Grid item xs={12} id='addExpenseSection'>\r\n                  <Button id='toggleExpenseBtn' onClick={expenseInputToggle}>\r\n                    <p style={{ marginRight: 10 }}>Add Expense</p>{' '}\r\n                    <FaFolderPlus style={{ fontSize: 24 }} />{' '}\r\n                  </Button>\r\n                </Grid>\r\n              </Paper>\r\n              <Paper id='expenseInputPaper'>\r\n                <Grid item xs={12} id='expenseInputSection'>\r\n                  {user ? (\r\n                    <ExpenseForm user={user} setRetrieve={setRetrieve} />\r\n                  ) : null}\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container id='contentContainer'>\r\n            <Grid item xs={12} lg={5}>\r\n              <Paper>\r\n                {monthlyCharges && monthlyCharges.length > 0 ? (\r\n                  <CHeader message={'Monthly'} total={totalMonthly} />\r\n                ) : (\r\n                  <HelperText monthly={true} display={display} />\r\n                )}\r\n                <Grid container className='expListCont'>\r\n                  {monthlyCharges\r\n                    ? monthlyCharges.map((item, index) => (\r\n                        <ChargeItem\r\n                          data={item}\r\n                          key={index}\r\n                          setRetrieve={setRetrieve}\r\n                        />\r\n                      ))\r\n                    : null}\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} lg={5}>\r\n              <Paper>\r\n                {oneTime && oneTime.length > 0 ? (\r\n                  <CHeader message={'Non-Monthly'} />\r\n                ) : (\r\n                  <HelperText monthly={false} display={display} />\r\n                )}\r\n                <Grid container className='expListCont'>\r\n                  {oneTime !== null && oneTime.length > 0\r\n                    ? oneTime.map((item, index) => (\r\n                        <ChargeItem\r\n                          data={item}\r\n                          key={index}\r\n                          setRetrieve={setRetrieve}\r\n                        />\r\n                      ))\r\n                    : null}\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport UserProvider from '../../contexts/UserProvider';\r\nimport { Grid, Container, Paper, Button } from '@material-ui/core';\r\nimport {\r\n  FaHome,\r\n  FaMoneyBill,\r\n  FaRegLightbulb,\r\n  FaHeartbeat,\r\n  FaGamepad,\r\n  FaCarSide\r\n} from 'react-icons/fa';\r\nimport SalaryInput from '../../components/SalaryInput/SalaryInput';\r\nimport './Profile.css';\r\nimport Content from '../../components/Content/Content';\r\nimport moment from 'moment';\r\nconst video = require('../../assets/images/globe.mp4');\r\nconst ogvideo = require('../../assets/images/ogglobe.ogv');\r\nconst webmglobe = require('../../assets/images/webmglobe.webm');\r\n\r\nconst Profile = () => {\r\n  const [selected, setSelected] = useState(null);\r\n  const [salarySection, setSalarySection] = useState(false);\r\n  const [chosenCat, setChosenCat] = useState('Home');\r\n  const userData = useContext(UserProvider.context);\r\n\r\n  useEffect(() => setSelected(userData), [userData]);\r\n\r\n  const expenseCategories = [\r\n    { style: { color: '#5A4218' }, name: 'Finances', icon: <FaMoneyBill /> },\r\n    { style: { color: 'green' }, name: 'Living', icon: <FaRegLightbulb /> },\r\n    { style: { color: 'red' }, name: 'Health', icon: <FaHeartbeat /> },\r\n    { style: { color: 'gold' }, name: 'Leisure', icon: <FaGamepad /> },\r\n    { style: { color: 'aquamarine' }, name: 'Travel', icon: <FaCarSide /> }\r\n  ];\r\n\r\n  const showSalaryUpdate = () => {\r\n    setSalarySection(true);\r\n  };\r\n\r\n  const categoryOnClick = category => {\r\n    setChosenCat(category);\r\n  };\r\n\r\n  const contentDisplay = () => {\r\n    switch (chosenCat) {\r\n      case 'Home':\r\n        return <Content display={'home'} user={selected._id} />;\r\n      case 'Travel':\r\n        return <Content display={'travel'} user={selected._id} />;\r\n      case 'Health':\r\n        return <Content display={'health'} user={selected._id} />;\r\n      case 'Leisure':\r\n        return <Content display={'leisure'} user={selected._id} />;\r\n      case 'Living':\r\n        return <Content display={'living'} user={selected._id} />;\r\n      case 'Finances':\r\n        return <Content display={'finances'} user={selected._id} />;\r\n      default:\r\n        return <Content displpay={'home'} user={selected._id} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth='xl' id='profilePage'>\r\n      <div id='backgroundContainer'>\r\n        <video autoPlay loop muted id='backgroundVid'>\r\n          <source src={video} type='video/mp4'></source>\r\n          <source src={ogvideo} type='video/ogg'></source>\r\n          <source src={webmglobe} type='video/webm'></source>\r\n        </video>\r\n      </div>\r\n      <Grid container id='profileHeader'>\r\n        <Grid item id='logoutSection'>\r\n          {selected ? (\r\n            <p id='welcomeH'>\r\n              Welcome, {selected.username}{' '}\r\n              <Button id='logBtn' variant='contained' href='/auth/logout'>\r\n                Log out\r\n              </Button>\r\n            </p>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item id='homeBtnG'>\r\n          {selected ? (\r\n            <>\r\n              <div className='homeSection'>\r\n                <Button id='homeBtn' onClick={() => setChosenCat('Home')}>\r\n                  <FaHome style={{ fontSize: '36px' }} />\r\n                  <p>Home</p>\r\n                </Button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </Grid>\r\n        <Grid item id='gridDate'>\r\n          <p>{moment(Date.now()).format('dddd, LL')}</p>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container id='gridSalary'>\r\n        <Paper className='profHeaderSub' id='salaryPaper'>\r\n          {selected && !salarySection ? (\r\n            <>\r\n              <p id='currentSalP'>\r\n                Current yearly income:{' '}\r\n                {selected.salary.toLocaleString('en-US', {\r\n                  style: 'currency',\r\n                  currency: 'USD'\r\n                })}\r\n              </p>\r\n              <Button\r\n                id='salaryUpdateBtn'\r\n                variant='outlined'\r\n                onClick={() => showSalaryUpdate()}\r\n              >\r\n                Update\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <SalaryInput\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n              setSalarySection={setSalarySection}\r\n            />\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid container id='expenseCategories'>\r\n        <Grid item xs={12} id='categoryNav'>\r\n          <Paper className='categorySelectRegion'>\r\n            {expenseCategories.map((item, index) => {\r\n              return (\r\n                <Button\r\n                  href='#text-buttons'\r\n                  style={item.style}\r\n                  onClick={() => categoryOnClick(item.name)}\r\n                  key={index}\r\n                  className='categoryBtn'\r\n                >\r\n                  <p className='catIcon'>{item.icon}</p>\r\n                  <p className='expenseCatText'>{item.name}</p>\r\n                </Button>\r\n              );\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container id='chosenCatContainer'>\r\n        <Grid item xs={12} className='chosenCatRegion'>\r\n          {selected ? contentDisplay() : <p>Loading</p>}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport history from './history';\nimport UserProvider from './contexts/UserProvider';\nimport Home from './pages/Home/Home';\nimport Profile from './pages/Profile/Profile';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <UserProvider>\n        <Route path='/profile/' component={Profile} />\n      </UserProvider>\n\n      <Route exact path='/' component={Home} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}