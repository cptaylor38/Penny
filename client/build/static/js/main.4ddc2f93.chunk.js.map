{"version":3,"sources":["assets/images/penny.svg","history.js","contexts/UserProvider.jsx","components/SignIn/SignIn.jsx","pages/Home/Home.jsx","components/Content/ContentHeader/ContentHeader.jsx","clientRoutes/API.js","components/Content/HomeOverview/OverviewMobileSub.jsx","components/Content/HomeOverview/HomeOverview.jsx","components/Content/HelperText/HelperText.jsx","components/ExpenseForm/NumberFormatCustom.jsx","components/ExpenseForm/ExpenseForm.jsx","components/Content/ChargeItem/ChargeItem.jsx","components/Content/Content.jsx","components/SalaryInput/SalarySub/SalarySub.jsx","components/SalaryInput/HourlySub/HourlySub.jsx","components/SalaryInput/SalaryInput.jsx","components/Navbar/Nav.jsx","pages/Profile/Profile.jsx","App.js","index.js"],"names":["module","exports","createBrowserHistory","context","createContext","UserProvider","children","useState","user","setUser","useEffect","fetch","then","res","json","catch","err","console","log","Provider","value","SignIn","className","href","id","Home","src","require","alt","Header","message","total","toLocaleString","style","currency","data","axios","post","get","category","put","OverviewMobileSub","profile","nrTotal","rTotal","format$","input","formatP","perc","salary","toFixed","Grid","container","item","xs","Paper","moment","Date","now","format","Overview","setProfile","doughnut","setDoughnut","nonMonDoughnut","setNonMonDoughnut","recurringTotal","setRecurringTotal","nonRecurringTotal","setNonRecurringTotal","expense","financesTotal","livingTotal","healthTotal","leisureTotal","travelTotal","nonMonFin","nonMonLiv","nonMonHea","nonMonLei","nonMonTra","nonRecTotal","filter","recurring","date","amount","map","monthly","nonMonTotal","labels","datasets","label","backgroundColor","API","response","sm","md","lg","options","title","display","text","fontSize","legend","position","maintainAspectRation","setText","NumberFormatCustom","props","inputRef","onChange","other","getInputRef","onValueChange","values","target","thousandSeparator","decimalScale","isNumericString","prefix","ExpenseForm","propData","form","toggleForm","setRetrieve","update","setCategory","radioValue","setRadioValue","setMonthly","selectedDate","setSelectedDate","setAmount","setTitle","toLowerCase","FormControl","InputLabel","Select","e","document","querySelector","border","MenuItem","FormHelperText","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","utils","DateFnsUtils","disableToolbar","autoOk","variant","margin","KeyboardButtonProps","fullWidth","TextField","InputProps","inputComponent","multiline","rowsMax","Button","color","type","onClick","preventDefault","dataObject","_id","ChargeItem","querySelectorAll","disabled","Content","content","setContent","monthlyCharges","setMonthlyCharges","oneTime","setOneTime","retrieve","expenseToggle","setExpenseToggle","totalMonthly","setTotalMonthly","retrieveContent","sortRecent","array","sort","a","b","unix","expenseInputToggle","expenseDiv","length","sortedOneTime","sortedMonthly","datedOneTime","datedMonthly","marginRight","index","key","SalarySub","handleChange","onSubmit","clearAlerts","onFocus","xl","HourlySub","handleWeekly","handleHourly","hourly","weekly","SalaryInput","selected","setSelected","setSalarySection","setSalary","incomeRate","setincomeRate","setHourly","setWeekly","inputAlert","setInputAlert","event","rateSubmit","rate","handleSalary","Checkbox","labelPlacement","Nav","setChosenCat","categoryOnClick","showSalaryUpdate","salarySection","expenseCategories","icon","AppBar","username","Profile","chosenCat","userData","useContext","Container","maxWidth","displpay","contentDisplay","App","history","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4ddc2f93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/penny.128c48c6.svg\";","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { createContext, useState, useEffect } from 'react';\r\nconst context = createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState();\r\n\r\n    useEffect(() => {\r\n        fetch(\"/user\")\r\n            .then(res => res.json())\r\n            .then(res => setUser(res))\r\n            .catch(err => console.log(err));\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <context.Provider value={user}>\r\n            {children}\r\n        </context.Provider>\r\n    );\r\n};\r\n\r\nUserProvider.context = context;\r\n\r\nexport default UserProvider;","import React from 'react';\r\nimport { FaGooglePlusG } from 'react-icons/fa';\r\nimport './SignIn.css';\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <div className='loginCont'>\r\n      <a href='/auth/google' className='loginBtn' id='googleBtn'>\r\n        <FaGooglePlusG />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport './Home.css';\r\nimport SignIn from '../../components/SignIn/SignIn';\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className='homepage'>\r\n                <div className='hContent'>\r\n                    <img src={require('../../assets/images/penny.svg')} alt='penny' id='pennyImg' />\r\n                    <div className='hTitle'>\r\n                        <p id='hPar1'>My name's <span id='hHeader'>Penny</span>.</p>\r\n                        <p id='hPar2'>I'm here to help you manage your finances.</p>\r\n                    </div>\r\n                </div>\r\n                <p id='signInTxt'>Sign In</p>\r\n                <SignIn id='hSign' />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './ContentHeader.css';\r\n\r\nconst Header = ({ message, total }) => {\r\n  return (\r\n    <h3 className='contentHeader'>\r\n      {message}{' '}\r\n      {total ? (\r\n        <>\r\n          {total.toLocaleString('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD'\r\n          })}\r\n        </>\r\n      ) : null}\r\n    </h3>\r\n  );\r\n};\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    adjustSalary: data => {\r\n        return axios.post('/api/salary/update', data);\r\n    },\r\n\r\n    getCategoryData: data => {\r\n        let id = data.id;\r\n        return axios.get(`/api/expense/${id}/${data.category}`);\r\n    },\r\n\r\n    getHomeDisplay: data => {\r\n        let id = data.id;\r\n        return axios.get(`/api/home/${id}`);\r\n    },\r\n\r\n    createExpense: data => {\r\n        return axios.post('/api/expense/create', data);\r\n    },\r\n\r\n    updateExpense: data => {\r\n        return axios.post('/api/expense/update', data);\r\n    },\r\n\r\n    deleteExpense: data => {\r\n        return axios.put(`/api/expense/delete/${data.id}`);\r\n    }\r\n};","import React from 'react';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nconst OverviewMobileSub = ({ profile, nrTotal, rTotal }) => {\r\n  let format$ = input => {\r\n    return input.toLocaleString('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    });\r\n  };\r\n\r\n  let formatP = input => {\r\n    let perc = (input / (profile.salary / 12)).toFixed(2) * 100;\r\n    return (\r\n      <p className='ovPercP'>\r\n        <span className='percSpan'>{perc}%</span> of your income.\r\n      </p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid container className='ovSubC'>\r\n      <Grid item xs={12} className='ovSubI'>\r\n        <Paper className='ovP'>\r\n          <header>\r\n            <span className='ovI'>Estimated monthly income: </span>\r\n            {format$(profile.salary / 12)}\r\n          </header>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} className='ovSubI'>\r\n        <Paper className='ovP'>\r\n          <header>\r\n            <span className='ovI'>Total monthly charges: </span>\r\n            {format$(rTotal)}\r\n          </header>\r\n          {formatP(rTotal)}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} className='ovSubI'>\r\n        <Paper className='ovP'>\r\n          <header>\r\n            <span className='ovI'>\r\n              Total msc. Charges from {moment(Date.now()).format('MMMM')}:{' '}\r\n            </span>\r\n            {format$(nrTotal)}\r\n          </header>\r\n          {formatP(nrTotal)}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} className='ovSubI'>\r\n        <Paper className='ovP'>\r\n          <header>\r\n            <span className='ovI'>Total charges this month: </span>\r\n            {format$(rTotal + nrTotal)}\r\n          </header>\r\n          {formatP(rTotal + nrTotal)}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} className='ovSubI'>\r\n        <Paper className='ovP'>\r\n          <header>\r\n            <span>Budget remaining: </span>\r\n            {format$(profile.salary / 12 - (rTotal + nrTotal))}\r\n          </header>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OverviewMobileSub;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './HomeOverview.css';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport API from '../../../clientRoutes/API';\r\nimport { Paper, Grid } from '@material-ui/core';\r\nimport OverviewMobileSub from './OverviewMobileSub';\r\nimport moment from 'moment';\r\n\r\nconst Overview = ({ user }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [doughnut, setDoughnut] = useState(null);\r\n  const [nonMonDoughnut, setNonMonDoughnut] = useState(null);\r\n  const [recurringTotal, setRecurringTotal] = useState(null);\r\n  const [nonRecurringTotal, setNonRecurringTotal] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (profile !== null) {\r\n      console.log('profile', profile);\r\n      console.log('profile.expense array', profile.expense);\r\n      let financesTotal = 0;\r\n      let livingTotal = 0;\r\n      let healthTotal = 0;\r\n      let leisureTotal = 0;\r\n      let travelTotal = 0;\r\n\r\n      let nonMonFin = 0;\r\n      let nonMonLiv = 0;\r\n      let nonMonHea = 0;\r\n      let nonMonLei = 0;\r\n      let nonMonTra = 0;\r\n\r\n      let nonRecTotal = 0;\r\n\r\n      profile.expense.filter((item) => {\r\n        if (item.recurring === false) {\r\n          if (\r\n            moment(item.date).format('MMMM') ===\r\n            moment(Date.now()).format('MMMM')\r\n          ) {\r\n            nonRecTotal += item.amount;\r\n            return item;\r\n          }\r\n        }\r\n        setNonRecurringTotal(nonRecTotal);\r\n      });\r\n\r\n      profile.expense.map((item) => {\r\n        switch (item.category) {\r\n          case 'finances':\r\n            if (item.monthly === true) return (financesTotal += item.amount);\r\n            else return (nonMonFin += item.amount);\r\n          case 'living':\r\n            if (item.monthly === true) return (livingTotal += item.amount);\r\n            else return (nonMonLiv += item.amount);\r\n          case 'health':\r\n            if (item.monthly === true) return (healthTotal += item.amount);\r\n            else return (nonMonHea += item.amount);\r\n          case 'leisure':\r\n            if (item.monthly === true) return (leisureTotal += item.amount);\r\n            else return (nonMonLei += item.amount);\r\n          case 'travel':\r\n            if (item.monthly === true) return (travelTotal += item.amount);\r\n            else return (nonMonTra += item.amount);\r\n          default:\r\n            return item;\r\n        }\r\n      });\r\n\r\n      let total =\r\n        financesTotal + livingTotal + healthTotal + leisureTotal + travelTotal;\r\n      setRecurringTotal(total);\r\n      let nonMonTotal =\r\n        nonMonFin + nonMonLiv + nonMonHea + nonMonLei + nonMonTra;\r\n      setNonRecurringTotal(nonMonTotal);\r\n\r\n      setDoughnut({\r\n        labels: ['Finances', 'Living', 'Health', 'Leisure', 'Travel'],\r\n        datasets: [\r\n          {\r\n            label: `Recurring Monthly Expenses - ${total.toLocaleString(\r\n              'en-US',\r\n              {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n              }\r\n            )}`,\r\n            backgroundColor: ['#5A4218', 'green', 'red', 'gold', 'aquamarine'],\r\n            data: [\r\n              financesTotal,\r\n              livingTotal,\r\n              healthTotal,\r\n              leisureTotal,\r\n              travelTotal,\r\n            ],\r\n          },\r\n        ],\r\n      });\r\n\r\n      setNonMonDoughnut({\r\n        labels: ['Finances', 'Living', 'Health', 'Leisure', 'Travel'],\r\n        datasets: [\r\n          {\r\n            label: `Msc. Charges - ${nonMonTotal.toLocaleString('en-US', {\r\n              style: 'currency',\r\n              currency: 'USD',\r\n            })}`,\r\n            backgroundColor: ['#5A4218', 'green', 'red', 'gold', 'aquamarine'],\r\n            data: [nonMonFin, nonMonLiv, nonMonHea, nonMonLei, nonMonTra],\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }, [profile]);\r\n\r\n  useEffect(() => {\r\n    API.getHomeDisplay({ id: user }).then((response) => {\r\n      console.log('response', response);\r\n      setProfile(response.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12} md={6} lg={6} className='pieGridItem'>\r\n        {doughnut !== null && recurringTotal > 0 ? (\r\n          <Paper id='recurringPiePaper'>\r\n            <Doughnut\r\n              id='recurringPie'\r\n              data={doughnut}\r\n              options={{\r\n                title: {\r\n                  display: true,\r\n                  text: doughnut.datasets[0].label,\r\n                  fontSize: 12,\r\n                },\r\n                legend: {\r\n                  display: true,\r\n                  position: 'bottom',\r\n                  maintainAspectRation: false,\r\n                },\r\n              }}\r\n            />\r\n          </Paper>\r\n        ) : (\r\n          <Paper className='ovAlt'>\r\n            <p>\r\n              This section evaluates your recurring charges, i.e. Credit card\r\n              charges, school loan payments, phone payments, etc. Click 'Add\r\n              Expense' above to add an item.\r\n            </p>\r\n          </Paper>\r\n        )}\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={6} className='pieGridItem'>\r\n        {nonMonDoughnut !== null && nonRecurringTotal > 0 ? (\r\n          <Paper id='recurringPiePaper'>\r\n            <Doughnut\r\n              id='recurringPie'\r\n              data={nonMonDoughnut}\r\n              options={{\r\n                title: {\r\n                  display: true,\r\n                  text: nonMonDoughnut.datasets[0].label,\r\n                  fontSize: 12,\r\n                },\r\n                legend: {\r\n                  display: true,\r\n                  position: 'bottom',\r\n                  maintainAspectRation: false,\r\n                },\r\n              }}\r\n            />\r\n          </Paper>\r\n        ) : (\r\n          <Paper className='ovAlt'>\r\n            <p>\r\n              This section evaluates your one-time charges, i.e. meals, gas,\r\n              movie tickets, etc. Click 'Add Expense' above to add an item.\r\n            </p>\r\n          </Paper>\r\n        )}\r\n      </Grid>\r\n      <Grid container id='mobileOverview'>\r\n        {recurringTotal !== null &&\r\n        nonRecurringTotal !== null &&\r\n        profile.salary > 0 ? (\r\n          <OverviewMobileSub\r\n            rTotal={recurringTotal}\r\n            nrTotal={nonRecurringTotal}\r\n            profile={profile}\r\n          />\r\n        ) : (\r\n          <Paper className='ovAlt'>\r\n            This section provides an overview of your charges and how they\r\n            affect your monthly income. Please ensure your salary is updated\r\n            above.\r\n          </Paper>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './HelperText.css';\r\n\r\nconst Header = ({ monthly, display }) => {\r\n  const [text, setText] = useState('...');\r\n  useEffect(() => {\r\n    if (monthly === true) {\r\n      switch (display) {\r\n        case 'finances':\r\n          setText('Ex. Loans, credit card payments, etc.');\r\n          break;\r\n        case 'living':\r\n          setText('Ex. Electric bill, phone bill, etc.');\r\n          break;\r\n        case 'health':\r\n          setText('Ex. Gym membership, Health Insurance, Medical bills, etc.');\r\n          break;\r\n        case 'leisure':\r\n          setText(\r\n            'Ex. Entertainment subscriptions, Cable bill, Internet bill, etc.'\r\n          );\r\n          break;\r\n        case 'travel':\r\n          setText('Ex. Car Payments, Auto Insurance, etc.');\r\n          break;\r\n        default:\r\n          setText('...');\r\n          break;\r\n      }\r\n    } else {\r\n      switch (display) {\r\n        case 'finances':\r\n          setText('Ex. Taxes, Donations, etc.');\r\n          break;\r\n        case 'living':\r\n          setText('Ex. Home Improvements, Appliances, etc.');\r\n          break;\r\n        case 'health':\r\n          setText('Ex. Food, Spa days, Prescriptions, etc.');\r\n          break;\r\n        case 'leisure':\r\n          setText('Ex. Video games, movie tickets, concerts, etc.');\r\n          break;\r\n        case 'travel':\r\n          setText(\r\n            'Ex. renewal, vehicle purchases, plane tickets, vacations, etc.'\r\n          );\r\n          break;\r\n        default:\r\n          setText('No expenses found for this category.');\r\n          break;\r\n      }\r\n    }\r\n  }, [display, monthly]);\r\n\r\n  return (\r\n    <div className='helperPaper'>\r\n      <h2>No expenses found for this category. Try adding one...</h2>\r\n      <h4>{text}</h4>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator\r\n            decimalScale={2}\r\n            isNumericString\r\n            prefix=\"$\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default NumberFormatCustom;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n  FormControlLabel,\r\n  Grid,\r\n  FormLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport NumberFormatCustom from './NumberFormatCustom';\r\nimport './ExpenseForm.css';\r\nimport API from '../../clientRoutes/API';\r\n\r\nconst ExpenseForm = ({ user, propData, form, toggleForm, setRetrieve, update}) => {\r\n  const [category, setCategory] = useState('');\r\n  const [radioValue, setRadioValue] = useState('');\r\n  const [monthly, setMonthly] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [amount, setAmount] = useState('');\r\n  const [title, setTitle] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (propData) {\r\n      setCategory(propData.category.toLowerCase());\r\n      setMonthly(propData.monthly);\r\n      setSelectedDate(propData.date);\r\n      setAmount(propData.amount);\r\n      setTitle(propData.title);\r\n      if (propData.monthly === true) {\r\n        setRadioValue('Yes');\r\n      } else setRadioValue('No');\r\n    }\r\n  }, [propData]);\r\n\r\n  const categoryChange = e => {\r\n    document.querySelector('#categoryGrid').style.border = 'none';\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const monthlyHandler = e => {\r\n    document.querySelector('#monthlyGrid').style.border = 'none';\r\n    setRadioValue(e.target.value);\r\n    switch (e.target.value) {\r\n      case 'Yes':\r\n        setMonthly(true);\r\n        break;\r\n      case 'No':\r\n        setMonthly(false);\r\n        break;\r\n      default:\r\n        setMonthly(false);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleDateChange = date => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleAmount = e => {\r\n    document.querySelector('#amountGrid').style.border = 'none';\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const handleTitle = e => {\r\n    document.querySelector('#titleGrid').style.border = 'none';\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const handleCancel = e => {\r\n    toggleForm(false);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (form === true) {\r\n      let dataObject = {\r\n        id: propData._id,\r\n        category: category,\r\n        monthly: monthly,\r\n        date: selectedDate,\r\n        amount: amount,\r\n        title: title\r\n      };\r\n\r\n      API.updateExpense(dataObject).then(response => {\r\n        setRetrieve(true);\r\n      });\r\n    } else {\r\n      if (\r\n        category !== '' &&\r\n        radioValue !== '' &&\r\n        amount !== '' &&\r\n        title !== ''\r\n      ) {\r\n        let dataObject = {\r\n          id: user,\r\n          category: category,\r\n          monthly: monthly,\r\n          date: selectedDate,\r\n          amount: amount,\r\n          title: title\r\n        };\r\n        API.createExpense(dataObject).then(res => {\r\n          setAmount('');\r\n          setRadioValue('');\r\n          setMonthly(false);\r\n          setTitle('');\r\n          setCategory('');\r\n          setRetrieve(true);\r\n        });\r\n      } else {\r\n        if (category === '') {\r\n          document.querySelector('#categoryGrid').style.border =\r\n            '3px solid red';\r\n        }\r\n        if (radioValue === '') {\r\n          document.querySelector('#monthlyGrid').style.border = '3px solid red';\r\n        }\r\n        if (amount === '') {\r\n          document.querySelector('#amountGrid').style.border = '3px solid red';\r\n        }\r\n        if (title === '') {\r\n          document.querySelector('#titleGrid').style.border = '3px solid red';\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container id='expenseGrid'>\r\n      <Grid item id='categoryGrid'>\r\n        <FormControl>\r\n          <InputLabel id='demo-simple-select-helper-label'>Category</InputLabel>\r\n          <Select\r\n            id='demo-simple-select-helper'\r\n            value={category}\r\n            onChange={categoryChange}\r\n          >\r\n            <MenuItem value='finances'>\r\n              <em>Finances</em>\r\n            </MenuItem>\r\n            <MenuItem value='living'>\r\n              <em>Living</em>\r\n            </MenuItem>\r\n            <MenuItem value='health'>\r\n              <em>Health</em>\r\n            </MenuItem>\r\n            <MenuItem value='leisure'>\r\n              <em>Leisure</em>\r\n            </MenuItem>\r\n            <MenuItem value='travel'>\r\n              <em>Travel</em>\r\n            </MenuItem>\r\n          </Select>\r\n          <FormHelperText>\r\n            How you want to categorize this expense.\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item id='monthlyGrid'>\r\n        <FormControl component='fieldset'>\r\n          <FormLabel component='legend'>Is this a monthly charge?</FormLabel>\r\n          <RadioGroup\r\n            aria-label='monthly'\r\n            name='monthly'\r\n            value={radioValue}\r\n            onChange={monthlyHandler}\r\n          >\r\n            <FormControlLabel value='Yes' control={<Radio />} label='Yes' />\r\n            <FormControlLabel value='No' control={<Radio />} label='No' />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item id='dateGrid'>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            autoOk={true}\r\n            variant='inline'\r\n            format='MM/dd/yyyy'\r\n            margin='normal'\r\n            id='date-picker-inline'\r\n            label='Date picker inline'\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date'\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </Grid>\r\n      <Grid item id='amountGrid'>\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            label='Amount'\r\n            value={amount}\r\n            onChange={handleAmount}\r\n            id='formatted-numberformat-input'\r\n            InputProps={{\r\n              inputComponent: NumberFormatCustom\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item id='titleGrid'>\r\n        <TextField\r\n          id='outlined-multiline-flexible'\r\n          label='Expense Title'\r\n          multiline\r\n          rowsMax='4'\r\n          value={title}\r\n          onChange={handleTitle}\r\n          margin='normal'\r\n          variant='outlined'\r\n        />\r\n      </Grid>\r\n      <Grid item id='submitGrid'>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          type='submit'\r\n          onClick={handleSubmit}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Grid>\r\n      {toggleForm ? (\r\n        <Grid item id='cancelExpenseGrid'>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            type='button'\r\n            onClick={handleCancel}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Grid>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\nimport './ChargeItem.css';\r\nimport moment from 'moment';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { FaEdit, FaCut } from 'react-icons/fa';\r\nimport ExpenseForm from '../../ExpenseForm/ExpenseForm';\r\nimport API from '../../../clientRoutes/API';\r\n\r\nconst ChargeItem = ({ data, setRetrieve }) => {\r\n  const [form, toggleForm] = useState(false);\r\n  const updateField = () => {\r\n    toggleForm(true);\r\n  };\r\n\r\n  const deleteExpense = () => {\r\n    document.querySelectorAll('.expenseDeleteBtn').disabled = true;\r\n    API.deleteExpense({ id: data._id }).then(response => {\r\n      document.querySelectorAll('.expenseDeleteBtn').disabled = false;\r\n      setRetrieve(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container className='chargeItem'>\r\n        {form === true && data ? (\r\n          <ExpenseForm\r\n            propData={data}\r\n            form={form}\r\n            toggleForm={toggleForm}\r\n            setRetrieve={setRetrieve}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Grid item xs={3} className='gridICharge'>\r\n              <p>{data.title}</p>\r\n            </Grid>\r\n            <Grid item xs={1} className='gridICharge'>\r\n              <p>${data.amount}</p>\r\n            </Grid>\r\n            <Grid item xs={3} className='gridICharge'>\r\n              <p>{moment(data.date).format('MM/DD/YYYY')}</p>\r\n            </Grid>\r\n            <Grid item xs={1} className='gridICharge'>\r\n              <Button type='button' onClick={updateField}>\r\n                <FaEdit />\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={1} className='gridICharge'>\r\n              <Button\r\n                type='button'\r\n                className='expenseDeleteBtn'\r\n                onClick={deleteExpense}\r\n              >\r\n                <FaCut />\r\n              </Button>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChargeItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Paper, Button } from '@material-ui/core';\r\nimport { FaFolderPlus } from 'react-icons/fa';\r\nimport CHeader from './ContentHeader/ContentHeader';\r\nimport Overview from './HomeOverview/HomeOverview';\r\nimport HelperText from './HelperText/HelperText';\r\nimport './Content.css';\r\nimport ExpenseForm from '../ExpenseForm/ExpenseForm';\r\nimport ChargeItem from './ChargeItem/ChargeItem';\r\nimport API from '../../clientRoutes/API';\r\nimport moment from 'moment';\r\n\r\nconst Content = ({ display, user }) => {\r\n  const [content, setContent] = useState(null);\r\n  const [monthlyCharges, setMonthlyCharges] = useState(null);\r\n  const [oneTime, setOneTime] = useState(null);\r\n  const [retrieve, setRetrieve] = useState(false);\r\n  const [expenseToggle, setExpenseToggle] = useState(false);\r\n  const [totalMonthly, setTotalMonthly] = useState(null);\r\n\r\n  const retrieveContent = () => {\r\n    if (display !== null && user !== null) {\r\n      API.getCategoryData({ id: user, category: display }).then(response => {\r\n        setContent(response.data);\r\n        setRetrieve(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const sortExpenses = () => {\r\n    if (content !== null && display !== 'home') {\r\n      let sortedOneTime = content.filter(item => item.monthly === false);\r\n      let sortedMonthly = content.filter(item => item.monthly === true);\r\n      let datedOneTime = sortRecent(sortedOneTime);\r\n      let datedMonthly = sortRecent(sortedMonthly);\r\n      setMonthlyCharges(datedMonthly);\r\n      setOneTime(datedOneTime);\r\n    }\r\n  };\r\n\r\n  const sortRecent = array => {\r\n    return array.sort((a, b) => moment(b.date).unix() - moment(a.date).unix());\r\n  };\r\n\r\n  const expenseInputToggle = () => {\r\n    setExpenseToggle(!expenseToggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let expenseDiv = document.querySelector('#expenseInputSection');\r\n    if (expenseToggle === false) {\r\n      expenseDiv.style.display = 'none';\r\n    }\r\n    if (expenseToggle === true) {\r\n      expenseDiv.style.display = 'flex';\r\n    }\r\n  }, [expenseToggle]);\r\n\r\n  useEffect(() => {\r\n    if (monthlyCharges !== null && monthlyCharges.length > 0) {\r\n      let total = 0;\r\n      monthlyCharges.map(item => (total += item.amount));\r\n      setTotalMonthly(total);\r\n    }\r\n  }, [monthlyCharges]);\r\n\r\n  useEffect(retrieveContent, [display, user, retrieve]);\r\n  useEffect(sortExpenses, [content]);\r\n\r\n  return (\r\n    <>\r\n      {display === 'home' ? (\r\n        <>\r\n          <Grid container id='addCont'>\r\n            <Grid item xs={12} id='addItem'>\r\n              <Grid item xs={12} id='addExpenseSection'>\r\n                  <Button id='toggleExpenseBtn' onClick={expenseInputToggle}>\r\n                    <p style={{ marginRight: 10 }}>Add Expense</p>{' '}\r\n                    <FaFolderPlus style={{ fontSize: 24 }} />{' '}\r\n                  </Button>\r\n              </Grid>\r\n              <Grid item xs={12} id='expenseInputSection'>\r\n                  {user ? (\r\n                    <ExpenseForm\r\n                      user={user}\r\n                        update={() => retrieveContent()}\r\n                        setRetrieve={setRetrieve}\r\n                    />\r\n                  ) : null}\r\n                </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container id='homeContentGrid'>\r\n            <Overview user={user} />\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Grid container id='addCont'>\r\n            <Grid item xs={12} id='addItem'>\r\n              <Grid item xs={12} id='addExpenseSection'>\r\n                  <Button id='toggleExpenseBtn' onClick={expenseInputToggle}>\r\n                    <p style={{ marginRight: 10 }}>Add Expense</p>{' '}\r\n                    <FaFolderPlus style={{ fontSize: 24 }} />{' '}\r\n                  </Button>\r\n              </Grid>\r\n              <Grid item xs={12} id='expenseInputSection'>\r\n                  {user ? (\r\n                    <ExpenseForm user={user} setRetrieve={setRetrieve}/>\r\n                  ) : null}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container id='contentContainer'>\r\n            <Grid item xs={12} lg={5}>\r\n              <Paper>\r\n                {monthlyCharges && monthlyCharges.length > 0 ? (\r\n                  <CHeader message={'Monthly'} total={totalMonthly} />\r\n                ) : (\r\n                  <HelperText monthly={true} display={display} />\r\n                )}\r\n                <Grid container className='expListCont'>\r\n                  {monthlyCharges\r\n                    ? monthlyCharges.map((item, index) => (\r\n                        <ChargeItem\r\n                          data={item}\r\n                          key={index}\r\n                          setRetrieve={setRetrieve}\r\n                        />\r\n                      ))\r\n                    : null}\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} lg={5}>\r\n              <Paper>\r\n                {oneTime && oneTime.length > 0 ? (\r\n                  <CHeader message={'Non-Monthly'} />\r\n                ) : (\r\n                  <HelperText monthly={false} display={display} />\r\n                )}\r\n                <Grid container className='expListCont'>\r\n                  {oneTime !== null && oneTime.length > 0\r\n                    ? oneTime.map((item, index) => (\r\n                        <ChargeItem\r\n                          data={item}\r\n                          key={index}\r\n                          setRetrieve={setRetrieve}\r\n                        />\r\n                      ))\r\n                    : null}\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport './SalarySub.css';\r\nimport { Grid, TextField, Button, FormControl } from '@material-ui/core';\r\nimport NumberFormatCustom from '../../ExpenseForm/NumberFormatCustom';\r\nimport './SalarySub.css';\r\n\r\nconst SalarySub = ({ handleChange, onSubmit, clearAlerts, salary }) => {\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} onFocus={clearAlerts}>\r\n            <Grid container id='salaryContainer'>\r\n                <Grid item xl id='salaryGrid'>\r\n                    <FormControl fullWidth >\r\n                        <TextField\r\n                            label=\"Salary\"\r\n                            value={salary !== 0 ? salary : ''}\r\n                            onChange={handleChange}\r\n                            className='hourlyWageInput salaryField'\r\n                            id=\"formatted-numberformat-input\"\r\n                            InputProps={{\r\n                                inputComponent: NumberFormatCustom\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} id='hourlySubmit'>\r\n                    <Button variant=\"outlined\" type='submit'>Submit</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SalarySub;","import React from 'react';\r\nimport './HourlySub.css';\r\nimport { Grid, Button, TextField, FormControl } from '@material-ui/core'\r\nimport NumberFormatCustom from '../../ExpenseForm/NumberFormatCustom';\r\n\r\nconst HourlySub = ({ handleWeekly, handleHourly, onSubmit, clearAlerts, hourly, weekly, salary }) => {\r\n    return (\r\n        <form onSubmit={onSubmit} onFocus={clearAlerts} id='hourlySalForm'>\r\n            <Grid container id='hourlyContainer'>\r\n                <Grid item id='hourlyWageGrid'>\r\n                    <FormControl fullWidth >\r\n                        <TextField\r\n                            label=\"Hourly Average\"\r\n                            className='hourlyWageInput'\r\n                            name='hourly'\r\n                            value={hourly}\r\n                            onChange={handleHourly}\r\n                            id=\"formatted-numberformat-input\"\r\n                            InputProps={{\r\n                                inputComponent: NumberFormatCustom\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs id='weeklyGrid'>\r\n                    <TextField\r\n                        id=\"outlined-adornment-amount\"\r\n                        className='weeklyAverageInput'\r\n                        name='weekly'\r\n                        variant=\"outlined\"\r\n                        value={weekly}\r\n                        label=\"Average Weekly Hours:\"\r\n                        onChange={handleWeekly}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} id='hourlySubmit'>\r\n                    {salary && hourly && weekly ? <p id='salaryTotalP'>{salary.toLocaleString(\"en-US\", {\r\n                        style: \"currency\",\r\n                        currency: \"USD\"\r\n                    })}</p> : null}\r\n                    <Button variant=\"outlined\" type='submit'>Submit</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default HourlySub;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Checkbox, Button, FormControlLabel } from '@material-ui/core';\r\nimport API from '../../clientRoutes/API';\r\nimport SalarySub from './SalarySub/SalarySub';\r\nimport HourlySub from './HourlySub/HourlySub';\r\nimport './SalaryInput.css';\r\n\r\nconst SalaryInput = ({ selected, setSelected, setSalarySection }) => {\r\n\r\n    const [salary, setSalary] = useState('');\r\n    const [incomeRate, setincomeRate] = useState(null);\r\n    const [hourly, setHourly] = useState('');\r\n    const [weekly, setWeekly] = useState('');\r\n    const [inputAlert, setInputAlert] = useState('')\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault();\r\n        if (incomeRate === 'hourly' && !hourly || incomeRate === 'hourly' && !weekly) {\r\n            return setInputAlert('Both your hourly rate and weekly hours must be entered.');\r\n        }\r\n        else {\r\n            API.adjustSalary({\r\n                id: selected._id,\r\n                salary: salary\r\n            }).then(res => { setSelected(res.data); console.log(res.data); setSalarySection(false) })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    const clearAlerts = () => {\r\n        setInputAlert(null);\r\n    }\r\n\r\n    const cancelUpdate = () => {\r\n        setincomeRate(null)\r\n        setSalarySection(false);\r\n    }\r\n\r\n    const rateSubmit = rate => {\r\n        setincomeRate(rate)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSalary(hourly * weekly * 4 * 12);\r\n    }, [hourly, weekly])\r\n\r\n    const handleHourly = (e) => {\r\n        setHourly(e.target.value);\r\n    }\r\n\r\n    const handleWeekly = (e) => {\r\n        setWeekly(e.target.value);\r\n    }\r\n\r\n    const handleSalary = (e) => {\r\n        setSalary(e.target.value);\r\n    }\r\n\r\n    const displayForm = () => {\r\n        if (incomeRate === 'salaried') {\r\n            return (\r\n                <SalarySub handleChange={handleSalary} onSubmit={onSubmit} clearAlerts={clearAlerts} salary={salary} />\r\n            )\r\n        }\r\n        if (incomeRate === 'hourly') {\r\n            return (\r\n                <HourlySub handleHourly={handleHourly} handleWeekly={handleWeekly} onSubmit={onSubmit} clearAlerts={clearAlerts} hourly={hourly} weekly={weekly} salary={salary} />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {inputAlert ? <p>{inputAlert}</p> : null}\r\n            {!incomeRate ? <>\r\n                <FormControlLabel\r\n                    value={'hourly'}\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Hourly\"\r\n                    labelPlacement=\"start\"\r\n                    onClick={() => rateSubmit('hourly')}\r\n                />\r\n                <FormControlLabel\r\n                    value={'salaried'}\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Salaried\"\r\n                    labelPlacement=\"start\"\r\n                    onClick={() => rateSubmit('salaried')}\r\n                />\r\n            </> : displayForm()}\r\n            <Button id='salaryBackBtn' onClick={() => cancelUpdate()}>Cancel</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SalaryInput;\r\n\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Grid, Container, Paper, Button } from '@material-ui/core';\r\nimport SalaryInput from '../../components/SalaryInput/SalaryInput';\r\nimport { FaHome, FaMoneyBill, FaRegLightbulb, FaHeartbeat, FaGamepad, FaCarSide, FaEdit } from 'react-icons/fa';\r\nimport './Nav.css';\r\nimport moment from 'moment';\r\n\r\nconst Nav = ({ user, setChosenCat, categoryOnClick, showSalaryUpdate, selected, salarySection, setSalarySection, setSelected }) => {\r\n\r\n    const expenseCategories = [\r\n        { style: { color: 'green' }, name: 'Finances', icon: <FaMoneyBill /> },\r\n        { style: { color: 'blue' }, name: 'Living', icon: <FaRegLightbulb /> },\r\n        { style: { color: 'red' }, name: 'Health', icon: <FaHeartbeat /> },\r\n        { style: { color: 'gold' }, name: 'Leisure', icon: <FaGamepad /> },\r\n        { style: { color: 'rgb(68, 46, 16)' }, name: 'Travel', icon: <FaCarSide /> }\r\n      ];\r\n\r\n    return (\r\n        <>\r\n            <AppBar position='static' id='siteNav'>\r\n                <Grid container id='navTop'>\r\n                    <Grid item>\r\n                        {user ? <h3>Welcome, {user.username}</h3> : (<h3>Loading profile...</h3>)}\r\n                        <Grid item><p>{moment(Date.now()).format('dddd, LL')}</p></Grid>\r\n                    </Grid>\r\n                    <Grid item id='navSalary'>\r\n                    {selected && !salarySection ? (\r\n                        <>\r\n                            <p>Current yearly income:{' '}\r\n                            <span style={{color: 'rgb(159, 400, 159)'}}>\r\n                                {selected.salary.toLocaleString('en-US', \r\n                                    { style: 'currency',\r\n                                      currency: 'USD'\r\n                                    })}\r\n                            </span>\r\n                            </p>\r\n                            <Button\r\n                                id='salaryUpdateBtn'\r\n                                variant='outlined'\r\n                                onClick={() => showSalaryUpdate()}>\r\n                                    <FaEdit />\r\n                            </Button>\r\n                        </>\r\n                    ) : (\r\n                            <SalaryInput\r\n                                selected={selected}\r\n                                setSelected={setSelected}\r\n                                setSalarySection={setSalarySection}/>\r\n                        )}\r\n                </Grid>\r\n                    <Grid item>\r\n                        <Button className='navBtn' id='homeBtn' variant='contained' onClick={()=> setChosenCat('Home')}><FaHome /></Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button className='navBtn' variant='contained' href='/auth/logout'>\r\n                            Sign Out\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container id='navBottom'>\r\n                    <div id='categoryNav'>\r\n                        {expenseCategories.map((item, index) => {\r\n                            return (<Button\r\n                                        href='#text-buttons'\r\n                                        style={item.style}\r\n                                        onClick={() => categoryOnClick(item.name)}\r\n                                        key={index}\r\n                                        className='categoryBtn'>\r\n                                            <p className='catIcon'>{item.icon}</p>\r\n                                            <p className='expenseCatText'>{item.name}</p>\r\n                                    </Button>);\r\n                        })}\r\n                    </div>\r\n                </Grid>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, { useContext, useState, useEffect } from 'react';\r\nimport UserProvider from '../../contexts/UserProvider';\r\nimport { Grid, Container, Paper, Button } from '@material-ui/core';\r\nimport './Profile.css';\r\nimport Content from '../../components/Content/Content';\r\nimport Navbar from '../../components/Navbar/Nav';\r\n\r\nconst Profile = () => {\r\n  const [selected, setSelected] = useState(null);\r\n  const [salarySection, setSalarySection] = useState(false);\r\n  const [chosenCat, setChosenCat] = useState('Home');\r\n  const userData = useContext(UserProvider.context);\r\n\r\n  useEffect(() => setSelected(userData), [userData]);\r\n\r\n  const showSalaryUpdate = () => {\r\n    setSalarySection(true);\r\n  };\r\n\r\n  const categoryOnClick = category => {\r\n    setChosenCat(category);\r\n  };\r\n\r\n  const contentDisplay = () => {\r\n    switch (chosenCat) {\r\n      case 'Home':\r\n        return <Content display={'home'} user={selected._id} />;\r\n      case 'Travel':\r\n        return <Content display={'travel'} user={selected._id} />;\r\n      case 'Health':\r\n        return <Content display={'health'} user={selected._id} />;\r\n      case 'Leisure':\r\n        return <Content display={'leisure'} user={selected._id} />;\r\n      case 'Living':\r\n        return <Content display={'living'} user={selected._id} />;\r\n      case 'Finances':\r\n        return <Content display={'finances'} user={selected._id} />;\r\n      default:\r\n        return <Content displpay={'home'} user={selected._id} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Navbar \r\n      selected={selected} \r\n      setSelected={setSelected}\r\n      user={userData} \r\n      setChosenCat={setChosenCat} \r\n      showSalaryUpdate={showSalaryUpdate}\r\n      salarySection={salarySection}\r\n      setSalarySection={setSalarySection}\r\n      categoryOnClick={categoryOnClick}/>\r\n    <Container maxWidth='xl' id='profilePage'>\r\n      <Grid container id='chosenCatContainer'>\r\n        <Grid item xs={12} className='chosenCatRegion'>\r\n          {selected ? contentDisplay() : <p>Loading</p>}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport history from './history';\nimport UserProvider from './contexts/UserProvider';\nimport Home from './pages/Home/Home';\nimport Profile from './pages/Profile/Profile';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <UserProvider>\n        <Route path='/profile/' component={Profile} />\n      </UserProvider>\n\n      <Route exact path='/' component={Home} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}